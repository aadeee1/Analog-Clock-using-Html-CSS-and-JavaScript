{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNN4qdK4aNY76hGcXRjOwsT",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/aadeee1/Analog-Clock-using-Html-CSS-and-JavaScript/blob/main/Password_generate\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "LDClVAwP7FdE"
      },
      "outputs": [],
      "source": [
        "!pip install streamlit --quiet"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%%writefile app.py\n",
        "import streamlit as st\n",
        "import random\n",
        "import string\n",
        "\n",
        "def generate_password(length, use_digits, use_special):\n",
        "    characters = string.ascii_letters\n",
        "\n",
        "    if use_digits:\n",
        "        characters += string.digits\n",
        "\n",
        "    if use_special:\n",
        "        characters += string.punctuation\n",
        "\n",
        "    return ''.join(random.choice(characters) for _ in range(length))\n",
        "\n",
        "def check_password_strength(password):\n",
        "    if not password:\n",
        "        return \"Please enter a password!\"\n",
        "    if len(password) < 8:\n",
        "        return \"Weak üòî (Minimum 8 characters required)\"\n",
        "    if not any(char in string.punctuation for char in password):\n",
        "        return \"Weak üòî (Special character required)\"\n",
        "    if not any(char.isupper() for char in password):\n",
        "        return \"Weak üòî (At least one capital letter required)\"\n",
        "    if not any(char.islower() for char in password):\n",
        "        return \"Weak üòî (At least one lower letter required)\"\n",
        "    if not any(char.isdigit() for char in password):\n",
        "        return \"Weak üòî (At least one digit required)\"\n",
        "    return \"Strong üí™\"\n",
        "\n",
        "st.title(\"üîê Password Generator & Strength Checker\")\n",
        "\n",
        "st.markdown(\n",
        "    \"\"\"\n",
        "       <style>\n",
        "           div.stButton > button {\n",
        "           color: #fff;\n",
        "           background-color: #000;\n",
        "           }\n",
        "       </style>\n",
        "    \"\"\",\n",
        "    unsafe_allow_html=True\n",
        ")\n",
        "\n",
        "length = st.slider(\"Select Password Length\", min_value=8, max_value=25, value=12)\n",
        "use_digits = st.checkbox(\"Use Digits\")\n",
        "use_special = st.checkbox(\"Use Special Characters\")\n",
        "\n",
        "if st.button(\"Generate Password\"):\n",
        "    password = generate_password(length, use_digits, use_special)\n",
        "    strength = check_password_strength(password)\n",
        "\n",
        "    st.write(f\"Generated Password: `{password}`\")\n",
        "    st.write(f\"Password Strength: {strength}\")\n",
        "\n",
        "st.write(\"--------------------------------\")\n",
        "\n",
        "st.subheader(\"üîé Check Your Password Strength\")\n",
        "user_password = st.text_input(\"Enter your password to check strength\", type=\"password\")\n",
        "if st.button(\"Check Strength\"):\n",
        "    if user_password:\n",
        "        strength = check_password_strength(user_password)\n",
        "        st.write(f\"Password Strength: {strength}\")\n",
        "    else:\n",
        "        st.write(\"‚ö†Ô∏è Please enter a password to check its strength.\")\n",
        "\n",
        "st.write(\"Made with ‚ù§Ô∏è by [Ahmed]\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FtNFKNk69B6s",
        "outputId": "1040a22b-ca55-4f69-e9b7-48d0f3d23b4e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Overwriting app.py\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!streamlit run app.py & npx localtunnel --port 8501"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MUPcnCe29ddt",
        "outputId": "e63b9857-04b0-4289-cf85-a76a9ebf2ca8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.\n",
            "\u001b[0m\n",
            "\u001b[1G\u001b[0K‚†ô\u001b[1G\u001b[0K‚†π\u001b[1G\u001b[0K‚†∏\u001b[1G\u001b[0K‚†º\u001b[0m\n",
            "\u001b[34m\u001b[1m  You can now view your Streamlit app in your browser.\u001b[0m\n",
            "\u001b[0m\n",
            "\u001b[34m  Local URL: \u001b[0m\u001b[1mhttp://localhost:8501\u001b[0m\n",
            "\u001b[34m  Network URL: \u001b[0m\u001b[1mhttp://172.28.0.12:8501\u001b[0m\n",
            "\u001b[34m  External URL: \u001b[0m\u001b[1mhttp://35.194.60.232:8501\u001b[0m\n",
            "\u001b[0m\n",
            "\u001b[1G\u001b[0K‚†¥\u001b[1G\u001b[0K‚†¶\u001b[1G\u001b[0K\u001b[1G\u001b[0JNeed to install the following packages:\n",
            "localtunnel@2.0.2\n",
            "Ok to proceed? (y) \u001b[20Gy\n",
            "\n",
            "\u001b[1G\u001b[0K‚†ô\u001b[1G\u001b[0K‚†π\u001b[1G\u001b[0K‚†∏\u001b[1G\u001b[0K‚†º\u001b[1G\u001b[0K‚†¥\u001b[1G\u001b[0K‚†¶\u001b[1G\u001b[0K‚†ß\u001b[1G\u001b[0K‚†á\u001b[1G\u001b[0K‚†è\u001b[1G\u001b[0K‚†ã\u001b[1G\u001b[0K‚†ô\u001b[1G\u001b[0K‚†π\u001b[1G\u001b[0K‚†∏\u001b[1G\u001b[0K‚†º\u001b[1G\u001b[0K‚†¥\u001b[1G\u001b[0K‚†¶\u001b[1G\u001b[0K‚†ß\u001b[1G\u001b[0K‚†á\u001b[1G\u001b[0K‚†è\u001b[1G\u001b[0K‚†ã\u001b[1G\u001b[0K‚†ô\u001b[1G\u001b[0K‚†π\u001b[1G\u001b[0K‚†∏\u001b[1G\u001b[0K‚†º\u001b[1G\u001b[0K‚†¥\u001b[1G\u001b[0K‚†¶\u001b[1G\u001b[0K‚†ß\u001b[1G\u001b[0Kyour url is: https://chilly-pillows-dig.loca.lt\n"
          ]
        }
      ]
    }
  ]
}